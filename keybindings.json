// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "cmd+j",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+i",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+k",
        "command": "cursorDown",
        "when": "textInputFocus"
    },

    {
        "key": "alt+cmd+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+cmd+i",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+cmd+j",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+cmd+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },

    {
        "key": "shift+cmd+i",
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "line",
            "value": 5
        },
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+k",
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "line",
            "value": 5
        },
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+j",
        "command": "cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },

    {
        "key": "shift+alt+cmd+j",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+l",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+k",
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "line",
            "value": 5,
            "select": true
        },
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+i",
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "line",
            "value": 5,
            "select": true
        },
        "when": "textInputFocus"
    },

    {
        "key": "ctrl+cmd+l",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },

    {
        "key": "ctrl+alt+j",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+ctrl+i",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+ctrl+k",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus"
    },

    {
        "key": "shift+cmd+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+r",
        "command": "extension.rerunLastCommand"
    },
    {
        "key": "cmd+f7",
        "command": "-extension.rerunLastCommand"
    },
    {
        "key": "shift+cmd+s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "cmd+k s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "shift+cmd+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+i",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+k",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "cmd+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "cmd+l",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+j",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "left",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+j",
        "command": "editor.action.scrollLeftHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+l",
        "command": "editor.action.scrollRightHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+k",
        "command": "editor.action.selectNextStickyScrollLine",
        "when": "stickyScrollFocused"
    },
    {
        "key": "cmd+i",
        "command": "editor.action.selectPreviousStickyScrollLine",
        "when": "stickyScrollFocused"
    },
    {
        "key": "cmd+k",
        "command": "history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "cmd+k",
        "command": "interactive.history.next",
        "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
    },
    {
        "key": "cmd+i",
        "command": "interactive.history.previous",
        "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
    },
    {
        "key": "cmd+k",
        "command": "interactiveEditor.arrowOutDown",
        "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorLast"
    },
    {
        "key": "cmd+i",
        "command": "interactiveEditor.arrowOutUp",
        "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorFirst"
    },
    {
        "key": "cmd+k",
        "command": "interactiveEditor.focus",
        "when": "editorTextFocus && interactiveEditorVisible && !interactiveEditorFocused && interactiveEditorOuterCursorPosition == 'above'"
    },
    {
        "key": "cmd+i",
        "command": "interactiveEditor.focus",
        "when": "editorTextFocus && interactiveEditorVisible && !interactiveEditorFocused && interactiveEditorOuterCursorPosition == 'below'"
    },
    {
        "key": "cmd+j",
        "command": "list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
    },
    {
        "key": "cmd+l",
        "command": "list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
    },
    {
        "key": "cmd+k",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "cmd+i",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "cmd+l",
        "command": "nextCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
    },
    {
        "key": "cmd+j",
        "command": "notification.collapse",
        "when": "notificationFocus"
    },
    {
        "key": "cmd+l",
        "command": "notification.expand",
        "when": "notificationFocus"
    },
    {
        "key": "cmd+k",
        "command": "notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "cmd+i",
        "command": "notifications.focusPreviousToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "cmd+j",
        "command": "previousCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
    },
    {
        "key": "left",
        "command": "-previousCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
    },
    {
        "key": "cmd+a cmd+a",
        "command": "keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+k",
        "command": "scm.viewNextCommit",
        "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "scm.viewPreviousCommit",
        "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
    },
    {
        "key": "cmd+k",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+k",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+i",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+i",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+i",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+k",
        "command": "settings.action.focusSettingsFile",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "cmd+k",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "cmd+k",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "cmd+i",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "cmd+i",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "cmd+i",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "cmd+k",
        "command": "workbench.banner.focusNextAction",
        "when": "bannerFocused"
    },
    {
        "key": "cmd+l",
        "command": "workbench.banner.focusNextAction",
        "when": "bannerFocused"
    },
    {
        "key": "cmd+i",
        "command": "workbench.banner.focusPreviousAction",
        "when": "bannerFocused"
    },
    {
        "key": "cmd+j",
        "command": "workbench.banner.focusPreviousAction",
        "when": "bannerFocused"
    },
    {
        "key": "cmd+k",
        "command": "workbench.statusBar.focusNext",
        "when": "statusBarFocused"
    },
    {
        "key": "cmd+l",
        "command": "workbench.statusBar.focusNext",
        "when": "statusBarFocused"
    },
    {
        "key": "cmd+i",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },
    {
        "key": "cmd+j",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },
    {
        "key": "cmd+u",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.nextEditor"
    },

    {
        "key": "shift+cmd+u",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "alt+cmd+p",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+1",
        "command": "terminal.focus"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "cmd+3",
        "command": "workbench.explorer.fileView.focus"
    },
    {
        "key": "cmd+4",
        "command": "workbench.scm.focus"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile"
    },
    {
        "key": "shift+cmd+n",
        "command": "explorer.newFolder"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+i",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+y",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+h",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+shift+h",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "cmd+shift+y",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "shift+cmd+u",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "cmd+k shift+cmd+left",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "cmd+k shift+cmd+right",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "cmd+enter",
        "command": "filesExplorer.openFilePreserveFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+l",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    }
]
